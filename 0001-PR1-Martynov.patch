From 39b812a98f4936086f0a6f29a368eac2a35577fa Mon Sep 17 00:00:00 2001
From: Semen Martynov <semen.martynov@gmail.com>
Date: Sun, 17 Mar 2013 03:18:22 +0400
Subject: [PATCH] PR1

---
 drivers/Kconfig                     |    2 ++
 drivers/Makefile                    |    3 ++
 drivers/spbau/Kconfig               |    7 ++++
 drivers/spbau/Makefile              |    1 +
 drivers/spbau/martynov/Kconfig      |    9 ++++++
 drivers/spbau/martynov/Makefile     |    1 +
 drivers/spbau/martynov/module-pr1.c |   60 +++++++++++++++++++++++++++++++++++
 7 files changed, 83 insertions(+)
 create mode 100644 drivers/spbau/Kconfig
 create mode 100644 drivers/spbau/Makefile
 create mode 100644 drivers/spbau/martynov/Kconfig
 create mode 100644 drivers/spbau/martynov/Makefile
 create mode 100644 drivers/spbau/martynov/module-pr1.c

diff --git a/drivers/Kconfig b/drivers/Kconfig
index dbdefa3..ae256cb 100644
--- a/drivers/Kconfig
+++ b/drivers/Kconfig
@@ -1,5 +1,7 @@
 menu "Device Drivers"
 
+source "drivers/spbau/Kconfig"
+
 source "drivers/base/Kconfig"
 
 source "drivers/bus/Kconfig"
diff --git a/drivers/Makefile b/drivers/Makefile
index a16a8d0..71cb9a7 100644
--- a/drivers/Makefile
+++ b/drivers/Makefile
@@ -5,6 +5,9 @@
 # Rewritten to use lists instead of if-statements.
 #
 
+# Modules for the Linux Kernel Programming Course at SPbAU
+obj-$(CONFIG_SPbAU_KERNEL)+= spbau/
+
 obj-y				+= irqchip/
 obj-y				+= bus/
 
diff --git a/drivers/spbau/Kconfig b/drivers/spbau/Kconfig
new file mode 100644
index 0000000..725a083
--- /dev/null
+++ b/drivers/spbau/Kconfig
@@ -0,0 +1,7 @@
+config SPbAU_KERNEL
+    bool "SPbAU PR modules"
+    default y
+    ---help---
+     Modules for the Linux Kernel Programming Course at the St. Petersburg Academic University of the Russian Academy of Sciences.
+
+source "drivers/spbau/martynov/Kconfig"
\ No newline at end of file
diff --git a/drivers/spbau/Makefile b/drivers/spbau/Makefile
new file mode 100644
index 0000000..142d147
--- /dev/null
+++ b/drivers/spbau/Makefile
@@ -0,0 +1 @@
+obj-$(CONFIG_SPbAU_KERNEL) += martynov/
\ No newline at end of file
diff --git a/drivers/spbau/martynov/Kconfig b/drivers/spbau/martynov/Kconfig
new file mode 100644
index 0000000..606ace8
--- /dev/null
+++ b/drivers/spbau/martynov/Kconfig
@@ -0,0 +1,9 @@
+config SPbAU_PR1
+    tristate "Module prints information about system tasks in start procedure."
+    depends on SPbAU_KERNEL
+    default y
+    ---help---
+     This module prints:
+     1) PID, command name, and some other information for current task;
+     2) PID, TGID (+ any additional informations) for each process in the system;
+     3) PID, groped by TGID, for each process in the system.
\ No newline at end of file
diff --git a/drivers/spbau/martynov/Makefile b/drivers/spbau/martynov/Makefile
new file mode 100644
index 0000000..26c9256
--- /dev/null
+++ b/drivers/spbau/martynov/Makefile
@@ -0,0 +1 @@
+obj-$(CONFIG_SPbAU_PR1) += module-pr1.o
\ No newline at end of file
diff --git a/drivers/spbau/martynov/module-pr1.c b/drivers/spbau/martynov/module-pr1.c
new file mode 100644
index 0000000..a799c59
--- /dev/null
+++ b/drivers/spbau/martynov/module-pr1.c
@@ -0,0 +1,60 @@
+#include <linux/module.h>  // base
+#include <linux/kernel.h>  // printk()
+#include <linux/init.h>    // __init and __exit
+#include <linux/sched.h>   // macroses
+
+MODULE_LICENSE("GPL");
+MODULE_AUTHOR("Semen Martynov <semen.martynov@gmail.com>");
+MODULE_DESCRIPTION("SPbAU: Linux Kernel Programming - task 01");
+MODULE_VERSION("1.0");
+
+static int __init start(void) // Entry point
+{
+    struct task_struct *task;
+    struct task_struct *tmp;
+
+    printk(KERN_INFO "********************\nModule for PR1 loaded\n********************\n");
+
+    printk("Task 1: to show PID, command name, and some other information for current task.\n");
+    printk("PID: %d\n", current->pid);
+    printk("Command name: %s\n", current->comm);
+    if ((u32)current->state < 0)
+    {
+        printk("State of the current task: unrunnable\n");
+    }
+    else
+    {
+        if ((u32)current->state == 0)
+        {
+            printk("State of the current task: runnable\n");
+        }
+        else
+        {
+            printk("State of the current task: stopped\n");
+        }
+    }
+
+    printk("Task 2: to show PID, TGID (+ any additional informations) for each process in the system.\n");
+    printk("PID\tTGID\tNAME\n");
+    for_each_process(task)
+    {
+        printk("%d\t%d\t%s\n", task->pid, task->tgid, task->comm);
+    }
+
+    printk("Task 3: to show PID, groped by TGID, for each process in the system.\n");
+    printk("PID\tTGID\tNAME\n");
+    do_each_thread(task, tmp)
+    {
+        printk("%d\t%d\t%s\n", task->pid, task->tgid, task->comm);
+    } while_each_thread(task, tmp);
+
+    return 0; // successful result
+}
+
+static void __exit stop(void) // Exit point
+{
+    printk(KERN_INFO "********************\nModule for PR1 unloaded\n********************\n");
+}
+
+module_init(start);
+module_exit(stop);
-- 
1.7.10.4

